"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2e3],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return f}});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=o.createContext({}),p=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},l=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=p(r),f=n,b=d["".concat(s,".").concat(f)]||d[f]||u[f]||a;return r?o.createElement(b,c(c({ref:t},l),{},{components:r})):o.createElement(b,c({ref:t},l))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,c=new Array(a);c[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,c[1]=i;for(var p=2;p<a;p++)c[p]=r[p];return o.createElement.apply(null,c)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5775:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return p},assets:function(){return l},toc:function(){return u},default:function(){return f}});var o=r(7462),n=r(3366),a=(r(7294),r(3905)),c=["components"],i={sidebar_position:5,title:"Logs"},s=void 0,p={unversionedId:"Bitlayer Scan APIs/Logs",id:"Bitlayer Scan APIs/Logs",title:"Logs",description:"The Event Log API was designed to provide an alternative to the native eth_getLogs. Below are the list of supported filter parameters:",source:"@site/docs/Bitlayer Scan APIs/Logs.mdx",sourceDirName:"Bitlayer Scan APIs",slug:"/Bitlayer Scan APIs/Logs",permalink:"/EXAPI/docs/Bitlayer Scan APIs/Logs",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Logs"},sidebar:"docs",previous:{title:"Blocks",permalink:"/EXAPI/docs/Bitlayer Scan APIs/Blocks"},next:{title:"Tokens",permalink:"/EXAPI/docs/Bitlayer Scan APIs/Tokens"}},l={},u=[{value:"Here are some examples of how this filter maybe used:",id:"here-are-some-examples-of-how-this-filter-maybe-used",level:2}],d={toc:u};function f(e){var t=e.components,r=(0,n.Z)(e,c);return(0,a.kt)("wrapper",(0,o.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The Event Log API was designed to provide an alternative to the native eth_getLogs. Below are the list of supported filter parameters:"),(0,a.kt)("p",null,"\xb7 fromBlock, toBlock, address"),(0,a.kt)("p",null,"\xb7 topic0, topic1, topic2, topic3 (32 Bytes per topic)"),(0,a.kt)("p",null,"\xb7 topic0_1_opr (and|or between topic0 & topic1), topic1_2_opr (and|or between topic1 & topic2), topic2_3_opr (and|or between topic2 & topic3),"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"topic0_2_opr (and|or between topic0 & topic2), topic0_3_opr (and|or between topic0 & topic3), topic1_3_opr (and|or between topic1 & topic3)\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"FromBlock & ToBlock accepts the blocknumber (integer, NOT hex) or 'latest' (earliest & pending is NOT supported yet)"),(0,a.kt)("li",{parentName:"ul"},"Topic Operator (opr) choices are either 'and' or 'or' and are restricted to the above choices only"),(0,a.kt)("li",{parentName:"ul"},"FromBlock & ToBlock parameters are required"),(0,a.kt)("li",{parentName:"ul"},"An address and/or topic(X) parameters are required, when multiple topic(X) parameters are used the topicX_X_opr (and|or operator) is also required"),(0,a.kt)("li",{parentName:"ul"},"For performance & security considerations, only the first 1000 results are return. So please narrow down the filter parameters")),(0,a.kt)("h2",{id:"here-are-some-examples-of-how-this-filter-maybe-used"},"Here are some examples of how this filter maybe used:"),(0,a.kt)("p",null,"Get Event Logs from block number 403200 to 403205 Block, where log address = 0xab40fe1dae842b209599269b8dafb0c54a743438 and topic","[0]"," = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},"https://api-testnet.bitlayer.org/scan/api?module=logs&action=getLogs&address=0xab40fe1dae842b209599269b8dafb0c54a743438&fromBlock=403200&toBlock=403205&page=1&offset=1000\n")),(0,a.kt)("p",null,"Get Event Logs from block number 4993830 to block 4993832 , where log address = 0xe561479bebee0e606c19bb1973fc4761613e3c42, topic","[0]"," = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef 'AND' topic","[1]"," = 0x000000000000000000000000730e2065b9daee84c3003c05bf6d2b3a08e55667"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},"https://api-testnet.bitlayer.org/scan/api?module=logs\n&action=getLogs\n&fromBlock=4993830\n&toBlock=4993832\n&address=0xe561479bebee0e606c19bb1973fc4761613e3c42\n&topic0=0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n&topic0_1_opr=and&topic1=0x000000000000000000000000730e2065b9daee84c3003c05bf6d2b3a08e55667\n")))}f.isMDXComponent=!0}}]);